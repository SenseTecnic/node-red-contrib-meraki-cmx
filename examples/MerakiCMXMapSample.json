[{"id":"288dad84.2c7c22","type":"http in","z":"c653dc25.9649e","name":"","url":"/clients","method":"get","swaggerDoc":"","x":115,"y":523,"wires":[["4c84cc85.fdc744"]]},{"id":"a605b25c.9ec4a","type":"http in","z":"c653dc25.9649e","name":"","url":"/clients/:mac","method":"get","swaggerDoc":"","x":135,"y":603,"wires":[["51d5a992.ae6cf8"]]},{"id":"1fee0933.d5e207","type":"mongodb2 in","z":"c653dc25.9649e","service":"_ext_","configNode":"c85dac41.d16f5","name":"","collection":"cmxmapapi","operation":"findOne","x":395,"y":723,"wires":[["9e5f1331.fb272","12cdf6e9.d138e9"]]},{"id":"b050338e.1b67d","type":"mongodb2 in","z":"c653dc25.9649e","service":"_ext_","configNode":"c85dac41.d16f5","name":"","collection":"cmxmapapi","operation":"find.toArray","x":505,"y":523,"wires":[["a9c904f.ed27cf8","1eebf99e.955246"]]},{"id":"d56766b7.8535b8","type":"debug","z":"c653dc25.9649e","name":"/clients/:mac","active":false,"console":"false","complete":"payload","x":715,"y":603,"wires":[]},{"id":"9e5f1331.fb272","type":"debug","z":"c653dc25.9649e","name":"/clients/:mac - mongodb","active":false,"console":"false","complete":"payload","x":675,"y":763,"wires":[]},{"id":"12cdf6e9.d138e9","type":"http response","z":"c653dc25.9649e","name":"","x":735,"y":723,"wires":[]},{"id":"a9c904f.ed27cf8","type":"http response","z":"c653dc25.9649e","name":"","x":735,"y":523,"wires":[]},{"id":"51d5a992.ae6cf8","type":"function","z":"c653dc25.9649e","name":"msg.payload=msg.req.params.mac;","func":"//extract mac\nmsg.payload=msg.req.params.mac;\nreturn msg;\n","outputs":1,"noerr":0,"x":435,"y":603,"wires":[["d56766b7.8535b8","7babaf26.a605c"]]},{"id":"6b623a3b.3eec44","type":"comment","z":"c653dc25.9649e","name":"Log data","info":"","x":145,"y":243,"wires":[]},{"id":"9ce98103.e9422","type":"function","z":"c653dc25.9649e","name":"build operation parameters: filter, update","func":"// This function updates/creates the client in the database\nvar filter = msg.payload;\nif (\"string\" == typeof filter) {\n  filter = JSON.parse(filter);\n}\n\nmsg.payload = [\n    {'name':msg.payload.name},\n    msg.payload,\n    {upsert:true}\n];\n\nreturn msg;\n","outputs":1,"noerr":0,"x":425,"y":303,"wires":[["442a3062.92a64"]]},{"id":"442a3062.92a64","type":"mongodb2 in","z":"c653dc25.9649e","service":"_ext_","configNode":"c85dac41.d16f5","name":"","collection":"cmxmapapi","operation":"findOneAndUpdate","x":415,"y":343,"wires":[["f9a37d5b.d1aac"]]},{"id":"f9a37d5b.d1aac","type":"debug","z":"c653dc25.9649e","name":"mongdb insert/update","active":true,"console":"false","complete":"payload","x":685,"y":343,"wires":[]},{"id":"90fdf031.96106","type":"function","z":"c653dc25.9649e","name":"Format Client","func":"// This function extracts the raw CMX data to create a consistent DB entry\nif(msg.payload === null){\n    return null;\n}\nvar map = msg.payload;\nclient = {}; //reset payload object for clarity\n\n\nif (map['version'] != '2.0'){\n    msg.log = \"got post with unexpected version: #{map['version']}\";\n    return msg;\n}else{\n    msg.log = \"working with correct version\";\n}\nif (map['type'] != 'DevicesSeen'){\nmsg.log = \"got post for event that we're not interested in: #{map['type']}\";\nreturn msg;\n}\n\nvar o = map['data']['observations'];\nconsole.log('map.data.apMac = '+map.data['apMac']);\n   for (var c in o){\n    if (o.hasOwnProperty(c)) {\n        //console.log(\"Key is \" + c + \", value is \" + o[c].location.lat);\n        if (!o[c]['location']){continue}\n        client.name = o[c]['clientMac'];\n        client.mac = o[c]['clientMac'];\n        client.lat = o[c]['location']['lat'];\n        client.lng = o[c]['location']['lng'];\n        client.unc = o[c]['location']['unc'];\n        client.seenString = o[c]['seenTime'];\n        client.seenEpoch = o[c]['seenEpoch'];\n        client.floors = map['data']['apFloors'] === null ? \"\" : map['data']['apFloors'].join;\n        client.manufacturer = o[c]['manufacturer'];\n        client.os = o[c]['os'];\n        client.ssid = o[c]['ssid'];\n        client.ap = map['data']['apMac'];\n        msg.log = \"AP #{map['data']['apMac']} on #{map['data']['apFloors']}: #{c}\";\n        if (client.seenEpoch===null || client.seenEpoch === 0){continue}//  # This probe is useless, so ignore it\n        \n    }\n    msg.payload = client;\n    node.send(msg);\n   }\n\n   \nreturn msg;","outputs":1,"noerr":0,"x":345,"y":243,"wires":[["a87c4021.70e8f","1cccc68d.160369","9ce98103.e9422"]]},{"id":"a87c4021.70e8f","type":"debug","z":"c653dc25.9649e","name":"format client","active":true,"console":"false","complete":"payload","x":715,"y":283,"wires":[]},{"id":"69e44b18.679e14","type":"debug","z":"c653dc25.9649e","name":"/cmx3 Raw Data","active":true,"console":"false","complete":"payload","x":695,"y":403,"wires":[]},{"id":"4c84cc85.fdc744","type":"function","z":"c653dc25.9649e","name":"find({})","func":"// Create search for all clients\nmsg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":295,"y":523,"wires":[["b050338e.1b67d"]]},{"id":"7babaf26.a605c","type":"function","z":"c653dc25.9649e","name":"msg.payload = {'name':msg.payload};","func":"msg.payload = {'name':msg.payload};\nreturn msg;","outputs":1,"noerr":0,"x":435,"y":663,"wires":[["1fee0933.d5e207"]]},{"id":"ed74e473.a83d08","type":"function","z":"c653dc25.9649e","name":"CMX Sample Data","func":"msg.payload = {\n    \"version\": \"2.0\",\n    \"secret\": \"supersecret\",\n    \"type\": \"DevicesSeen\",\n    \"data\": {\n        \"apMac\": \"00:18:0a:13:dd:b0\",\n        \"apFloors\": [],\n        \"apTags\": [ \"\", \"home\", \"\" ],\n        \"observations\": [ { \n            \"ipv4\": \"/192.168.0.15\",\n            \"location\": {\n                \"lat\": 51.5355157,\n                \"lng\": -0.06990350000000944,\n                \"unc\": 1.1185886512767726,\n                \"x\": [], \"y\": [] \n                \n            },\n            \"seenTime\": \"2016-07-29T13:17:10Z\",\n            \"ssid\": \".interwebs\",\n            \"os\": \"Debian-based Linux\",\n            \"clientMac\": \"CC:CC:CC:CC:CC:CC\",\n            \"seenEpoch\": 1469798230,\n            \"rssi\": 48,\n            \"ipv6\": null,\n            \"manufacturer\": \"Edimax Technology\" \n            }, \n            { \n            \"ipv4\": null,\n            \"location\": {\n                \"lat\": 51.5133157,\n                \"lng\": -0.06890350000000944,\n                \"unc\": 49, \"x\": [],\n                \"y\": []\n                },\n            \"seenTime\": \"2016-07-29T13:17:07Z\",\n            \"ssid\": \"Hotspot-123\",\n            \"os\": \"fancyOS\",\n            \"clientMac\": \"DD:DD:DD:DD:DD:DD\",\n            \"seenEpoch\": 1469798227,\n            \"rssi\": 9,\n            \"ipv6\": null,\n            \"manufacturer\": \"Samsung(THAILAND)\"\n            }\n        ]\n    }\n};\nreturn msg;","outputs":1,"noerr":0,"x":355,"y":183,"wires":[["90fdf031.96106","21bc255c.7867fa"]]},{"id":"3d1aa191.95985e","type":"inject","z":"c653dc25.9649e","name":"Sample Client C D","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":135,"y":183,"wires":[["ed74e473.a83d08"]]},{"id":"21bc255c.7867fa","type":"debug","z":"c653dc25.9649e","name":"CMX Sample Raw Data","active":true,"console":"false","complete":"payload","x":675,"y":183,"wires":[]},{"id":"1cccc68d.160369","type":"debug","z":"c653dc25.9649e","name":"format client. info","active":true,"console":"false","complete":"info","x":695,"y":243,"wires":[]},{"id":"aa9765a2.9a0ce8","type":"mongodb2 in","z":"c653dc25.9649e","service":"_ext_","configNode":"c85dac41.d16f5","name":"","collection":"cmxmapapi","operation":"find.toArray","x":405,"y":963,"wires":[["6eb96694.2b71d8"]]},{"id":"d6199274.9c9e3","type":"inject","z":"c653dc25.9649e","name":"List all clients","topic":"","payload":"{}","payloadType":"json","repeat":"","crontab":"","once":false,"x":115,"y":963,"wires":[["aa9765a2.9a0ce8"]]},{"id":"6eb96694.2b71d8","type":"debug","z":"c653dc25.9649e","name":"mongo data","active":true,"console":"false","complete":"true","x":715,"y":963,"wires":[]},{"id":"b538ad8.757e85","type":"template","z":"c653dc25.9649e","name":"CSS","field":"payload.style","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"html, body {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: \"proxima-nova-1\",\"proxima-nova-2\", \"Helvetica Neue\", Helvetica, verdana, sans-serif;\n  -webkit-font-smoothing: antialiased;\n}\n\n#masthead {\n  height: 125px;\n  width: 100%;\n  position: relative;\n  background: #FFFFFF;\n  border-top: 4px solid #78be20;\n  box-shadow: 0 2px 7px rgba(0,0,0,0.2);\n}\n\n#masthead-content {\n  margin: 0 auto;\n  position: relative;\n  width: 80%;\n  height: 100%;\n}\n\n#masthead-content img {\n  float: left;\n  margin: 32px;\n  width: 165px;\n  margin-left: 0;\n}\n\n#content {\n  width: 80%;\n  margin: 60px auto;\n  padding: 40px;\n  box-sizing: border-box;\n  border-radius: 9px;\n  background: #FAFAFA;\n}\n\n#mac-address {\n  margin-bottom: 10px;\n}\n\n#mac-field {\n  width: 30%;\n  height: 35px;\n  margin-bottom: 20px;\n  padding-left: 13px;\n  border: 1px solid #E6E6E6;\n  border-radius: 2px;\n  box-sizing: border-box;\n  font-family: \"proxima-nova-1\",\"proxima-nova-2\", \"Helvetica Neue\", Helvetica, verdana, sans-serif;\n  font-size: 16px;\n  font-weight: 100;\n  min-width: 136px;\n}\n\n#map-wrapper {\n  width: 100%;\n  height: 700px;\n}\n\n#map-canvas {\n  height: 70%;\n  width: 70%;\n}\n\n\nh1 {\n  color: #78be20;\n  font-weight: 100;\n  font-size: 38px;\n  margin-top: 0;\n  letter-spacing: -1px;\n}\n\n\n#last-mac {\n  color: #6B6B6B;\n  width: 100%;\n  font-weight: 400;\n  margin-bottom: 10px;\n  font-size: 14px;\n}\n\n.small {\n  color: #6B6B6B;\n  font-weight: 400;\n  margin-bottom: 30px;\n  font-size: 14px;\n}\n\n.bold {\n  font-weight: 600;\n}\n\nbutton, input {\n  width: 11%;\n}\n\nbutton {\n  height: 35px;\n  border: none;\n  background: #737373;\n  border-radius: 2px;\n  box-sizing: border-box;\n  color: white;\n  font-family: \"proxima-nova-1\",\"proxima-nova-2\", \"Helvetica Neue\", Helvetica, verdana, sans-serif;\n  font-weight: 200;\n  font-size: 14px;\n  padding: 0;\n  min-width: 70px;\n}\n\nbutton:hover{\n  background: #616060;\n}\n","x":455,"y":863,"wires":[["555f8fca.1a61e"]]},{"id":"8cd0f7d9.c6ef08","type":"template","z":"c653dc25.9649e","name":"JavaScript","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"plain","template":"(function ($) {\n  var map,                                      // This is the Google map\n    clientMarker,                               // The current marker when we are following a single client\n    clientUncertaintyCircle,                    // The circle describing that client's location uncertainty\n    lastEvent,                                  // The last scheduled polling task\n    lastInfoWindowMac,                          // The last Mac displayed in a marker tooltip\n    allMarkers = [],                            // The markers when we are in \"View All\" mode\n    lastMac = \"\",                               // The last requested MAC to follow\n    infoWindow = new google.maps.InfoWindow();  // The marker tooltip\n    /*\n    ,\n    markerImage = new google.maps.MarkerImage('blue_circle.png',\n      new google.maps.Size(15, 15),\n      new google.maps.Point(0, 0),\n      new google.maps.Point(4.5, 4.5)\n    );\n    */\n    \n    var latlngbounds = new google.maps.LatLngBounds();\n\n  // Removes all markers\n  function clearAll() {\n    clientMarker.setMap(null);\n    clientUncertaintyCircle.setMap(null);\n    lastInfoWindowMac = \"\";\n    var m;\n    while (allMarkers.length !== 0) {\n      m = allMarkers.pop();\n      if (infoWindow.anchor === m) {\n        lastInfoWindowMac = m.mac;\n      }\n      m.setMap(null);\n    }\n  }\n\n  // Plots the location and uncertainty for a single MAC address\n  function track(client) {\n    clearAll();\n    if (client !== undefined && client.lat !== undefined && !(typeof client.lat === 'undefined')) {\n      var pos = new google.maps.LatLng(client.lat, client.lng);\n      console.log('track client pos '+pos);\n      if (client.manufacturer !== undefined) {\n        mfrStr = client.manufacturer + \" \";\n      } else {\n        mfrStr = \"\";\n      }\n      if (client.os !== undefined) {\n        osStr = \" running \" + client.os;\n      } else {\n        osStr = \"\";\n      }\n      if (client.ssid !== undefined) {\n        ssidStr = \" with SSID '\" + client.ssid + \"'\";\n      } else {\n        ssidStr = \"\";\n      }\n      if (client.floors !== undefined && client.floors !== \"\") {\n        floorStr = \" at '\" + client.floors + \"'\"\n      } else {\n        floorStr = \"\";\n      }\n      $('#last-mac').text(mfrStr + \"'\" + lastMac + \"'\" + osStr + ssidStr +\n        \" last seen on \" + client.seenString + floorStr +\n        \" with uncertainty \" + client.unc.toFixed(1) + \" meters (reloading every 20 seconds)\");\n      map.setCenter(pos);\n      clientMarker.setMap(map);\n      clientMarker.setPosition(pos);\n      clientUncertaintyCircle = new google.maps.Circle({\n        map: map,\n        center: pos,\n        radius: client.unc,\n        fillColor: 'RoyalBlue',\n        fillOpacity: 0.25,\n        strokeColor: 'RoyalBlue',\n        strokeWeight: 1\n      });\n    } else {\n      $('#last-mac').text(\"Client '\" + lastMac + \"' could not be found\");\n    }\n  }\n\n  // Looks up a single MAC address\n  function lookup(mac) {\n    $.getJSON('/clients/' + mac, function (response) {\n      track(response);\n    });\n  }\n\n  // Adds a marker for a single client within the \"view all\" perspective\n  function addMarker(client) {\n    var pos = new google.maps.LatLng(client.lat, client.lng);\n    console.log('addMarker pos '+pos);\n    var m = new google.maps.Marker({\n      position: pos,\n      map: map,\n      mac: client.mac,\n      //icon: markerImage\n    });\n    \n    if(client.lat){\n        latlngbounds.extend(pos);\n        map.fitBounds(latlngbounds);\n    }\n    google.maps.event.addListener(m, 'click', function () {\n        //build info\n        var htmlString = '<h2>Client:  '+client.name +'</h2>';\n        \n        for (var key in client) {\n            if (client.hasOwnProperty(key)) {\n                if(client[key] !== undefined){\n                    if(key == '_id' || key == 'name'){continue}\n                    htmlString += '<p>'+key+' : '+client[key]+'</p>';\n                }\n            }\n        }\n        \n        infoWindow.setContent(\"<div>\" + htmlString + \"</div>\" + \"(<a class='client-filter' href='#' data-mac='\" +\n        client.mac + \"'>Follow this client)</a>\");\n        //\n      //infoWindow.setContent(\"<div>\" + client.mac + \"</div> (<a class='client-filter' href='#' data-mac='\" +\n        //client.mac + \"'>Follow this client)</a>\");\n        \n      infoWindow.open(map, m);\n    });\n    if (client.mac === lastInfoWindowMac) {\n      infoWindow.open(map, m);\n    }\n    allMarkers.push(m);\n  }\n\n  // Displays markers for all clients\n  function trackAll(clients) {\n    clearAll();\n    if (clients.length === 0) {\n      $('#last-mac').text(\"Found no clients (if you just started the web server, you may need to wait a few minutes to receive pushes from Meraki)\");\n    } else { $('#last-mac').text(\"Found \" + clients.length + \" clients (reloading every 20 seconds)\"); }\n    clientUncertaintyCircle.setMap(null);\n    clients.forEach(addMarker);\n  }\n\n  // Looks up all MAC addresses\n  function lookupAll() {\n    $('#last-mac').text(\"Looking up all clients...\");\n    $.getJSON('/clients/', function (response) {\n      trackAll(response);\n    });\n  }\n\n  // Begins a task timer to reload a single MAC every 20 seconds\n  function startLookup() {\n    lastMac = $('#mac-field').val().trim();\n    if (lastEvent !== null) { window.clearInterval(lastEvent); }\n    lookup(lastMac);\n    lastEvent = window.setInterval(lookup, 20000, lastMac);\n  }\n\n  // Begins a task timer to reload all MACs every 20 seconds\n  function startLookupAll() {\n    if (lastEvent !== null) { window.clearInterval(lastEvent); }\n    lastEvent = window.setInterval(lookupAll, 20000);\n    lookupAll();\n  }\n\n  // This is called after the DOM is loaded, so we can safely bind all the\n  // listeners here.\n  function initialize() {\n    var center = new google.maps.LatLng(37.7705, -122.3870);\n    var mapOptions = {\n      zoom: 20,\n      center: center\n    };\n    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\n    clientMarker = new google.maps.Marker({\n      position: center,\n      map: null,\n      //icon: markerImage\n    });\n    clientUncertaintyCircle = new google.maps.Circle({\n      position: center,\n      map: null\n    });\n\n    $('#track').click(startLookup).bind(\"enterKey\", startLookup);\n\n    $('#all').click(startLookupAll);\n\n    $(document).on(\"click\", \".client-filter\", function (e) {\n      e.preventDefault();\n      var mac = $(this).data('mac');\n      $('#mac-field').val(mac);\n      startLookup();\n    });\n\n    startLookupAll();\n  }\n\n  // Call the initialize function when the window loads\n  $(window).load(initialize);\n}(jQuery));","x":295,"y":863,"wires":[["b538ad8.757e85"]]},{"id":"40132b80.a30474","type":"http in","z":"c653dc25.9649e","name":"","url":"/cmxapimap","method":"get","swaggerDoc":"","x":125,"y":863,"wires":[["8cd0f7d9.c6ef08"]]},{"id":"8a26a858.b40058","type":"http response","z":"c653dc25.9649e","name":"","x":735,"y":863,"wires":[]},{"id":"555f8fca.1a61e","type":"template","z":"c653dc25.9649e","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n  <head>\n    <title>CMX push API demo app with Node-RED</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <script>TypekitConfig={kitId:\"hum1oye\",scriptTimeout:1.5e3},function(){var a=document.getElementsByTagName(\"html\")[0];a.className+=\" wf-loading\";var b=setTimeout(function(){a.className=a.className.replace(/(\\s|^)wf-loading(\\s|$)/g,\"\"),a.className+=\" wf-inactive\"},TypekitConfig.scriptTimeout),c=document.createElement(\"script\");c.src=\"//use.typekit.com/\"+TypekitConfig.kitId+\".js\",c.type=\"text/javascript\",c.async=\"true\",c.onload=c.onreadystatechange=function(){var a=this.readyState;if(!a||a==\"complete\"||a==\"loaded\"){clearTimeout(b);try{Typekit.load(TypekitConfig)}catch(c){}}};var d=document.getElementsByTagName(\"script\")[0];d.parentNode.insertBefore(c,d)}()</script>\n    <script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&key=AIzaSyCWFVfLzjGaepofBse9sHFF-S-mtqVjzLA\"></script>\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <script>{{{payload.script}}}</script>\n    <style>{{{payload.style}}}</style>\n  </head>\n  <body>\n    <div id=\"masthead\">\n      <div id=\"masthead-content\">\n        <img src=\"https://meraki.cisco.com/img/cisco-meraki.png\"/>\n      </div>\n    </div>\n    <div id=\"content\">\n      <h1>CMX API Demo with Node-RED</h1>\n      <div id=\"mac-address\">\n        <input id=\"mac-field\" type=\"text\" placeholder=\"Enter MAC address\" />&nbsp;\n        <button id=\"track\">Follow</button>&nbsp;\n        <button id=\"all\">View All</button>\n        <button><a href=/clients target=\"_blank\" style=\"text-decoration:none; color: inherit\">View All - JSON</a></button>\n      </div>\n      <div id=\"last-mac\"></div>\n      <div class=\"small\"><span class=\"bold\">Clients in the wrong place?</span> Make sure your APs are placed properly in Dashboard.</div>\n      <div id=\"map-wrapper\">\n        <div id=\"map-canvas\"></div>\n      </div>\n    </div>\n  </body>\n</html>","x":595,"y":863,"wires":[["8a26a858.b40058"]]},{"id":"1eebf99e.955246","type":"debug","z":"c653dc25.9649e","name":"find({})","active":false,"console":"false","complete":"payload","x":735,"y":563,"wires":[]},{"id":"ad3eb1c5.d939e","type":"comment","z":"c653dc25.9649e","name":"Client Front-end API","info":"","x":115,"y":483,"wires":[]},{"id":"288b592c.6ad686","type":"comment","z":"c653dc25.9649e","name":"Receive CMX Data","info":"","x":115,"y":103,"wires":[]},{"id":"96947224.ee6ad","type":"comment","z":"c653dc25.9649e","name":"Utilities","info":"","x":75,"y":923,"wires":[]},{"id":"9f6fa41e.7f8ab8","type":"function","z":"c653dc25.9649e","name":"CMX Sample Data","func":"msg.payload = {\n    \"version\": \"2.0\",\n    \"secret\": \"supersecret\",\n    \"type\": \"DevicesSeen\",\n    \"data\": {\n        \"apMac\": \"00:18:0a:13:dd:b0\",\n        \"apFloors\": [],\n        \"apTags\": [ \"\", \"home\", \"\" ],\n        \"observations\": [ { \n            \"ipv4\": \"/192.168.0.15\",\n            \"location\": {\n                \"lat\": 51.5155157,\n                \"lng\": -0.06590350000000944,\n                \"unc\": 1.2185886512767726,\n                \"x\": [], \"y\": [] \n                \n            },\n            \"seenTime\": \"2016-07-29T13:17:10Z\",\n            \"ssid\": \".interwebs\",\n            \"os\": \"Debian-based Linux\",\n            \"clientMac\": \"AA:AA:AA:AA:AA:AA\",\n            \"seenEpoch\": 1469795230,\n            \"rssi\": 48,\n            \"ipv6\": null,\n            \"manufacturer\": \"Edimax Technology\" \n            }, \n            { \n            \"ipv4\": null,\n            \"location\": {\n                \"lat\": 51.5215157,\n                \"lng\": -0.069905350000000944,\n                \"unc\": 49, \"x\": [],\n                \"y\": []\n                },\n            \"seenTime\": \"2016-07-29T13:17:07Z\",\n            \"ssid\": null,\n            \"os\": null,\n            \"clientMac\": \"BB:BB:BB:BB:BB:BB\",\n            \"seenEpoch\": 1469598227,\n            \"rssi\": 9,\n            \"ipv6\": null,\n            \"manufacturer\": \"Samsung(THAILAND)\"\n            }\n        ]\n    }\n};\nreturn msg;","outputs":1,"noerr":0,"x":355,"y":143,"wires":[["90fdf031.96106"]]},{"id":"e5cddbc2.4241c8","type":"inject","z":"c653dc25.9649e","name":"Sample Client A B","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":135,"y":143,"wires":[["9f6fa41e.7f8ab8"]]},{"id":"90e948cd.165158","type":"comment","z":"c653dc25.9649e","name":"Client Front-end Site","info":"","x":115,"y":823,"wires":[]},{"id":"6e43d782.e9d228","type":"comment","z":"c653dc25.9649e","name":"README","info":"#Cisco Meraki CMX API - Demo Map\nThis Flow is an example of how to use the Cisco Meraki CMX\nJSON feed to store clients into a database and track them\non a Google map.\n\nThere are three major components\n- CMX Receier\n- Front-end API\n- Front-end Website (Google MAP)\n\n\n##CMX Receier -\nThe CMX Receiver utilizes the Node-RED CMX node to collect\nJSON data from a Cisco Meraki network. This feed is generally\nupdated within 2 minutes. There are two Sample Clients feeds\nthat can be used to test the flow.\n\nOnce the data has been received, the JSON is parsed and\ncommitted to a MongoDB. Please ensure your MongoDB is running\nfor this flow to work properly.\n\n\n##Front-end API - \nThere are two [GET] HTTP routes that provide access to the \ncollected client data. These will be used by the front-end \nwebsite to pull the client information for all or specific\nclients. Fun Fact: You can also use these routes with Postman\nor a standard browser to pull the data directly.\n\n##Front-end Website - \nThis will provide the webpage to view the Google map and \ntrack clients.\nThe website can be viewed at\n`http://yourserver:1880/cmxapimap`\n\n#Setup\n- Configure a Cisco Meraki network to post the CMX JSON to\nyour listening URL. Example: `http://yourserver:1880/cmx`\n\n- Install and configure MongoDB. Then update the MongoDB2 \nnodes within your flow to match the appropriate settings.\nExample: `mongodb://localhost:27017/test`\n\n- Insert Sample Client information by pressing the blue\nbuttons for each. Note, this will place the clients in London\nby default. Remove these clients if you do not want to \nconfuse your map centering\n\nMore information can be found on the Meraki Developers portal\nhttp://developers.meraki.com/tagged/Location\n\n\nThis flow was created by \nCory Guynn\nSystems Engineer\nCisco Meraki \n2016\n\nFor other fun IoT projects\nhttp://www.InternetOfLEGO.com\n\nMIT License. \n\n","x":395,"y":23,"wires":[]},{"id":"c5276a25.e7c568","type":"Meraki CMX","z":"c653dc25.9649e","name":"","url":"/cmx","settings":"","x":99.5,"y":404,"wires":[["90fdf031.96106","69e44b18.679e14"]]},{"id":"c85dac41.d16f5","type":"mongodb2","z":"c653dc25.9649e","uri":"mongodb://localhost:27017/test","name":"test","options":"","parallelism":"-1"}]
